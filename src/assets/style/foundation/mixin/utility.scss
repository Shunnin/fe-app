/*======================================

  Utility Mixins
    -> Descriptions

======================================*/

/* ----- Transition ----- */

@mixin transition($transition...) {
  -webkit-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

/* ----- Center-align a block level element ----- */

@mixin center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
  float: none !important;
}

/* ----- Clearfix ----- */

@mixin clearfix() {
  &:before,
  &:after {
    content: ' ';
    display: table;
  }
  &:after {
    clear: both;
  }
}

/* ----- Centered container element ----- */

@mixin container-fixed($gutter: $grid-gutter-width) {
  margin-right: auto;
  margin-left: auto;
  padding-right: ceil(($gutter / 2));
  padding-left: floor(($gutter / 2));

  @include clearfix;
}

/*--------------------------------------
  Named Breakpoints are xs = phone, sm = tablet-portrait, md = tablet-landscape-desktop, lg = large-desktop
--------------------------------------*/

@mixin respond-to($media) {
  /* ----- Landscape phones and down : < 768px ----- */
  @if $media==xs {
    @media (max-width: $screen-xs-max) {
      @content;
    }
  }
  /* ----- Landscape phone to portrait tablet : >= 768px, < 992px ----- */
  @else if $media==sm {
    @media (min-width: $screen-sm) and (max-width: $screen-sm-max) {
      @content;
    }
  }
  /* ----- Portrait tablet to landscape and desktop: >= 992px, < 1200px ----- */
  @else if $media==md {
    @media (min-width: $screen-md) and (max-width: $screen-md-max) {
      @content;
    }
  }
  /* ----- Desktop and large desktop : >= 1200px ----- */
  @else if $media==lg {
    @media (min-width: $screen-lg) {
      @content;
    }
  }
  // Specific max width
  @else {
    @media only screen and (max-width: #{$media}px) {
      @content;
    }
  }
}

@mixin respondto($media...) {
  @each $mediatype in $media {
    @include respond-to($mediatype) {
      @content;
    }
  }
}
